{"version":3,"file":"static/js/135.b86b891f.chunk.js","mappings":"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","sources":["api/fetchAPI.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = \"1c8f6b064eb2a1f6bd306bc5a0f759ec\";\n\nexport const fetchMoviesByQuery = async(query, page) => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&language=en-US&page=${page}&api_key=${API_KEY}`\n    )\n    return response;\n}\n\nexport const fetchTrendingMovies = async() => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n    )\n    return response;\n}\n\nexport const fetchMovieById = async(id) => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    )\n    return response;\n}\n\nexport const fetchReviewsById = async(id) => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    return response;\n}\n\nexport const fetchCastById = async(id) => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n    )\n    return response;\n}","// extracted by mini-css-extract-plugin\nexport default {\"castCard\":\"Cast_castCard__QBNdO\",\"castCardImage\":\"Cast_castCardImage__p5rzt\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastById } from 'api/fetchAPI';\nimport css from './Cast.module.css';\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchCastById(movieId);\n        const { data } = response;\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <ul className={css.castCard}>\n      {cast.map(act => {\n        const actorImage = act.profile_path\n          ? `https://image.tmdb.org/t/p/w200/${act.profile_path}`\n          : null;\n        return (\n          <li key={act.id}>\n            {act.name}<br/> <img src={actorImage} alt={act.character} className={css.castCardImage}/>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieSection\":\"MovieDetails_movieSection__uGkG9\",\"movieCard\":\"MovieDetails_movieCard__UPRqg\",\"movieCardImage\":\"MovieDetails_movieCardImage__uy0f1\",\"movieCardTitle\":\"MovieDetails_movieCardTitle__lR9hr\",\"backBtn\":\"MovieDetails_backBtn__rLQ3F\",\"additionalLink\":\"MovieDetails_additionalLink__4ZR-w\"};","import React, { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from 'api/fetchAPI';\nimport Reviews from 'pages/Reviews/Reviews';\nimport Cast from 'pages/Cast/Cast';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState([]);\n  const location = useLocation();\n  const backLink = `${\n    location.state ? '/movies' + location.state.from.search : '/'\n  }`;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await fetchMovieById(movieId);\n        setMovieData(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const { title, overview, genres, vote_average, poster_path, release_date } =\n    movieData;\n\n  const movieImage = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : null;\n\n  const releaseYear = new Date(release_date).getFullYear();\n\n  return (\n    <div className={css.movieSection}>\n      <Link to={`${backLink}`} className={css.backBtn}>\n        Go back\n      </Link>\n      <div className={css.movieCard}>\n        <img src={movieImage} alt={title} className={css.movieCardImage} />\n        <div className={css.movieCardInfo}>\n          <p className={css.movieCardTitle}>\n            {title}({releaseYear})\n          </p>\n          <p>User score: {vote_average}</p>\n          <h4>Overview</h4>\n          <p>{overview}</p>\n          <h5>Genres</h5>\n          <ul>\n            {genres\n              ? genres.map(genre => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })\n              : null}\n          </ul>\n        </div>\n      </div>\n      <div>\n        <h4>Additional information</h4>\n        <Link className={css.additionalLink} to=\"cast\" element={<Cast />}>\n          Cast\n        </Link>\n        <br />\n        <Link className={css.additionalLink} to=\"reviews\" element={<Reviews />}>\n          Reviews\n        </Link>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewAuthor\":\"Reviews_reviewAuthor__qKz+L\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'api/fetchAPI';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await fetchReviewsById(movieId);\n        const { results } = data;\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length === 0 && <p>We don't have any reviews for this movies</p>}\n      {reviews\n        .filter((review, index) => index < 10)\n        .map(review => {\n          const { id, author, content } = review;\n          return (\n            <li key={id}>\n              <p className={css.reviewAuthor}>Author: {author}</p>\n              {content}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","fetchMoviesByQuery","query","page","axios","response","fetchTrendingMovies","fetchMovieById","id","fetchReviewsById","fetchCastById","Cast","useState","cast","setCast","movieId","useParams","useEffect","fetchData","data","console","log","className","css","map","act","actorImage","profile_path","name","src","alt","character","movieData","setMovieData","location","useLocation","backLink","state","from","search","title","overview","genres","vote_average","poster_path","release_date","movieImage","releaseYear","Date","getFullYear","to","genre","element","Reviews","Suspense","reviews","setReviews","results","length","filter","review","index","author","content"],"sourceRoot":""}