{"version":3,"file":"static/js/866.02be39d4.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAkB,mCAAG,WAAMC,EAAOC,GAAb,uFACPC,EAAAA,EAAAA,IAAA,0DACgCF,EADhC,gCAC6DC,EAD7D,oBAC6EH,IAFtE,cACxBK,EADwB,yBAIvBA,GAJuB,2CAAH,wDAOlBC,EAAmB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,gEACsCJ,IAF9B,cACzBK,EADyB,yBAIxBA,GAJwB,2CAAH,qDAOnBE,EAAc,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,oBACiCR,IAF9B,cACpBK,EADoB,yBAInBA,GAJmB,2CAAH,sDAOdI,EAAgB,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCR,IAFpC,cACtBK,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOhBK,EAAa,mCAAG,WAAMF,GAAN,uFACFJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,4BACyCR,IAFvC,cACnBK,EADmB,yBAIlBA,GAJkB,2CAAH,qD,sIC/B1B,EAA+B,8B,SCwC/B,EApCgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,kHAESR,EAAAA,EAAAA,IAAiBK,GAF1B,gBAENI,EAFM,EAENA,KACAC,EAAYD,EAAZC,QACRN,EAAWM,GAJG,gDAMdC,QAAQC,IAAR,MANc,qGAAH,qDAUfJ,GACD,GAAE,CAACH,KAGF,0BACsB,IAAnBF,EAAQU,SAAgB,qEACxBV,EACEW,QAAO,SAACC,EAAQC,GAAT,OAAmBA,EAAQ,CAA3B,IACPC,KAAI,SAAAF,GACH,IAAQhB,EAAwBgB,EAAxBhB,GAAImB,EAAoBH,EAApBG,OAAQC,EAAYJ,EAAZI,QACpB,OACE,2BACE,eAAGC,UAAWC,EAAd,qBAAyCH,KACxCC,IAFMpB,EAKZ,MAGR,C","sources":["api/fetchAPI.js","webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = \"1c8f6b064eb2a1f6bd306bc5a0f759ec\";\n\nexport const fetchMoviesByQuery = async(query, page) => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&language=en-US&page=${page}&api_key=${API_KEY}`\n    )\n    return response;\n}\n\nexport const fetchTrendingMovies = async() => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n    )\n    return response;\n}\n\nexport const fetchMovieById = async(id) => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    )\n    return response;\n}\n\nexport const fetchReviewsById = async(id) => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    return response;\n}\n\nexport const fetchCastById = async(id) => {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n    )\n    return response;\n}","// extracted by mini-css-extract-plugin\nexport default {\"reviewAuthor\":\"Reviews_reviewAuthor__qKz+L\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'api/fetchAPI';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await fetchReviewsById(movieId);\n        const { results } = data;\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length === 0 && <p>We don't have any reviews for this movies</p>}\n      {reviews\n        .filter((review, index) => index < 5)\n        .map(review => {\n          const { id, author, content } = review;\n          return (\n            <li key={id}>\n              <p className={css.reviewAuthor}>Author: {author}</p>\n              {content}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","fetchMoviesByQuery","query","page","axios","response","fetchTrendingMovies","fetchMovieById","id","fetchReviewsById","fetchCastById","useState","reviews","setReviews","movieId","useParams","useEffect","fetchData","data","results","console","log","length","filter","review","index","map","author","content","className","css"],"sourceRoot":""}